filter {
    if "java" in [program] {
        grok {
            break_on_match => true
            match => [
                "message", "\[%{TIMESTAMP_ISO8601:date_time}\] %{GREEDYDATA:message}",
                "message", "%{TIMESTAMP_ISO8601:date_time}:%{LOGLEVEL:event_level}:%{JAVACLASS:class}:%{GREEDYDATA:message}"
            ]
            overwrite => [ "message" ]
            remove_tag => [ "_grokparsefailure" ]
            tag_on_failure => [ "_java_parse_failure" ]
        }
        date {
            match => [
                "date_time", "YY-MM-dd HH:mm:ss,SSS", "MMM dd HH:mm:ss"
            ]
            target => "@timestamp"
        }
        multiline {
            pattern => "^\s"
            what => "previous"
        }
    }
    
    if "play" in [program] {
        grok {
            break_on_match => true
            match => [
                "message", "(?m)%{TIMESTAMP_ISO8601:date_time} - \[%{LOGLEVEL:event_level}\] - from %{GREEDYDATA:logger} in %{GREEDYDATA:thread}%{GREEDYDATA:message}",
                "message", "(?m)%{TIMESTAMP_ISO8601:date_time} - \[%{LOGLEVEL:event_level}\] - %{GREEDYDATA:message}",
                "message", "(?m)%{TIMESTAMP_ISO8601:date_time} - %{GREEDYDATA:message}"
            ]
            overwrite => [ "message" ]
            remove_tag => [ "_grokparsefailure" ]
            tag_on_failure => [ "_play_parse_failure" ]
        }
        date {
            match => [
                "date_time", "YY-MM-dd HH:mm:ss,SSS"
            ]
            target => "@timestamp"
            add_field => { "debug" => "%{date_time}" }
        }
        multiline {
            pattern => "^%{TIMESTAMP_ISO8601}"
            negate => true
            what => "previous"
        }
    }
}